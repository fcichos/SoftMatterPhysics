---
execute:
  echo: false
title: Phase Transitions
jupyter: python3
---


The importance of looking at phase transitions resides in the multicomponent nature of soft matter and its interaction energy scales.


```{python}
#| include: false
#| nbsphinx: hidden
#| tags: [hide-input]

import numpy as np
from ipywidgets import interact, interactive, fixed, interact_manual
import ipywidgets as widgets
import matplotlib.pyplot as plt


import plotly
import plotly.graph_objs as go
from IPython.display import display, HTML
import plotly.io as pio

plotly.offline.init_notebook_mode()
display(HTML(
    '<script type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_SVG"></script>'
))

%matplotlib inline
%config InlineBackend.figure_format = 'retina' 

plt.rcParams.update({'font.size': 12,
                     'axes.titlesize': 18,
                     'axes.labelsize': 16,
                     'axes.labelpad': 14,
                     'lines.linewidth': 1,
                     'lines.markersize': 10,
                     'xtick.labelsize' : 16,
                     'ytick.labelsize' : 16,
                     'xtick.top' : True,
                     'xtick.direction' : 'in',
                     'ytick.right' : True,
                     'ytick.direction' : 'in',}) 
```

When heat is applied, an ice cube undergoes melting, while water undergoes evaporation. These transformations involve the conversion of a solid into a liquid, which then changes into a vapor. Importantly, all of these changes are reversible. The term "phase" refers to a state of matter that is chemically and physically uniform. A substance can exist in solid, liquid, and gas phases, and some substances, like carbon, can have multiple solid phases, such as graphite and diamond. 

A phase transition is the spontaneous conversion of one phase to another, and it occurs at a specific temperature for a given pressure. At atmospheric pressure, ice melts at 0°C, and water boils at 100°C. The transition temperature is determined by the *equality of the chemical potential* of a specific element in the two phases.


A phase diagram is a graphical representation that illustrates the conditions, such as temperature and pressure, at which different phases coexist or are present.

![cell](img/cell.png)

We will approach phase transitions no tstarting directly with the solid-liquid phase transition but first exploring the transition of a single macromolecule from the extended conformaiton into globular state. Following that we will have a look at liquid-liquid unmixing as example and later turn into the liquid-solid phase transitions.

## Liquid-Liquid Unmixing

Consider two liquids consisting of molecules A and B, which we will bring together and mix. The mixing should happen at constant volume and temperature. We can therefore use the Helmholtz free energy as the quantity that is minimized.

Initially, the separated components have the free energies $F_{\mathrm{A}}$ and $F_{\mathrm{B}}.$ After the mixing, the free energy that derives from the mixing is $F_{\mathrm{A+B}} - (F_{\mathrm{A}} + F_{\mathrm{B}}).$ If the volume fraction of component A is $\phi_{\mathrm{A}}$ and the one of component B is $\phi_{\mathrm{B}}$ such that $\phi_{\mathrm{A}} + \phi_{\mathrm{B}} = 1$ (incompressibility of the mixture), then we can calculate the mixing free energy.

First, we calculate the mixing entropy $S_{\mathrm{mix}}$ from

$$
S = -k_{\mathrm{B}} \sum_{i} p_{i} \ln(p_{i})
$$

which results in

$$
S_{\mathrm{mix}} = -k_{\mathrm{B}} (\phi_{\mathrm{A}} \ln(\phi_{\mathrm{A}}) + \phi_{\mathrm{B}} \ln(\phi_{\mathrm{B}})).
$$

In addition to the mixing entropy, we have to calculate the change of the internal energy as well. This internal energy consists of an energy term that comprises the interaction of two molecules of the same type A ($\epsilon_{\mathrm{AA}}$), one of two molecules of the same type B ($\epsilon_{\mathrm{BB}}$), and one between the molecules A and B ($\epsilon_{\mathrm{AB}}$). If we assume that each site in the liquid has a number of neighbors, then the interaction energy of this site is 

$$
z \phi_{\mathrm{A}} \epsilon_{\mathrm{AA}}.
$$

A fraction of $\phi_{\mathrm{A}}$ sites is occupied with molecules A and, thus, the interaction energy reads

$$
\frac{z}{2} \phi_{\mathrm{A}}^2 \epsilon_{\mathrm{AA}}.
$$

Similarly, expressions for the interaction of B molecules and the interaction of A with B can be obtained. To calculate the change in internal energy when mixing the two species, we still have to subtract the internal energy of the two separated components, $z \phi_{\mathrm{A}} \epsilon_{\mathrm{AA}}/2$ and $z \phi_{\mathrm{B}} \epsilon_{\mathrm{BB}}/2$, such that we obtain

$$
U_{\mathrm{mix}} = \frac{z}{2} \left[ (\phi_{\mathrm{A}}^2 - \phi_{\mathrm{A}}) \epsilon_{\mathrm{AA}} + (\phi_{\mathrm{B}}^2 - \phi_{\mathrm{B}}) \epsilon_{\mathrm{BB}} + 2 \phi_{\mathrm{A}} \phi_{\mathrm{B}} \epsilon_{\mathrm{AB}} \right].
$$

Using this expression as well as $\phi_{\mathrm{A}} + \phi_{\mathrm{B}} = 1$, we can define an interaction parameter

$$
\chi = \frac{z}{2 k_{\mathrm{B}} T} (2 \epsilon_{\mathrm{AB}} - \epsilon_{\mathrm{AA}} - \epsilon_{\mathrm{BB}})
$$

such that

$$
\frac{U_{\mathrm{mix}}}{k_{\mathrm{B}} T} = \chi \phi_{\mathrm{A}} \phi_{\mathrm{B}}
$$

by utilizing, for example, $(\phi_{\mathrm{A}}^2 - \phi_{\mathrm{A}}) \epsilon_{\mathrm{AA}} = \phi_{\mathrm{A}} (\phi_{\mathrm{A}} - 1) \epsilon_{\mathrm{AA}} = -\phi_{\mathrm{A}} \phi_{\mathrm{B}} \epsilon_{\mathrm{AA}}$.

This finally yields the free energy of mixing

$$
\frac{F_{\mathrm{mix}}}{k_{\mathrm{B}} T} = \phi_{\mathrm{A}} \ln(\phi_{\mathrm{A}}) + \phi_{\mathrm{B}} \ln(\phi_{\mathrm{B}}) + \chi \phi_{\mathrm{A}} \phi_{\mathrm{B}}.
$$

We can now plot this free energy of mixing as a function of the volume fraction of component A.

![mix](img/mix.png)

```{python}
#| nbsphinx: hidden
#| tags: [hide-input]
# define volume fraction variable
phi=np.linspace(0.01,0.99,100)
```

```{python}
#| nbsphinx: hidden
#| tags: [hide-input]
# calculate mixing free energy
def mix(x):
    m=phi*np.log(phi)+(1-phi)*np.log(1-phi)+x*phi*(1-phi)
    plt.plot(phi,m)
    plt.ylabel(r"$\frac{F_{\rm mix}}{k_B T}$")
    plt.xlabel(r"volume fraction $\phi$")
    plt.savefig("./img/mix.png", bbox_inches="tight")
    plt.show()
```


_Free energy of mixing as a function of the composition of the binary liquid mixture for different interaction parameters._

::: {.content-visible when-format="html"}

```{python}
#| tags: []
# Define volume fraction variable
phi = np.linspace(0.01, 0.99, 100)

# Define a function to calculate mixing free energy
def calculate_mixing_free_energy(x):
    return phi * np.log(phi) + (1 - phi) * np.log(1 - phi) + x * phi * (1 - phi)

# Create the initial plot for x = 0
x_init = 0  # Initial value of x
m_init = calculate_mixing_free_energy(x_init)

# Create a Plotly figure
fig = go.Figure()

# Add a line plot for the mixing free energy
fig.add_trace(go.Scatter(
    x=phi,
    y=m_init,
    mode='lines',
    name=r'$\frac{F_{\rm mix}}{k_B T}$'
))

# Add layout details with LaTeX-style labels for axis titles
fig.update_layout(
    xaxis_title='$$\\text{volume fraction } \\phi$$',
    yaxis_title='$$\\frac{F_{\\rm mix}}{k_B T}$$',
    width=800,
    height=600,
    sliders=[{
        'active': 0,
        'currentvalue': {"prefix": "Interaction parameter (x): "},
        'pad': {"t": 50},
        'steps': [
            {'label': str(x), 'method': 'update', 'args': [{'y': [calculate_mixing_free_energy(x)]}]}
            for x in np.arange(-1, 5.1, 0.1)
        ]
    }]
)


# Save the figure as an png file
pio.write_image(fig, 'img/mixing_free_energy.png')
# Show the figure
fig.show()
```

:::

::: {.content-visible unless-format="html"}
![](img/mixing_free_energy.png)
:::

The free energy function has a minimum at a composition of $\phi=0.5$ for all $\chi$ smaller than 2. In this region of interaction parameters, the two liquids are always miscible at any composition. For $\chi$ larger than two, the free energy function reveals two minima, i.e., there are two compositions under which the mixture is stable (one left in phase B and one right in A). The location of these two minima defines what is called the **binodal** or **coexistence curve**, which separates the unstable from the stable region in a phase diagram (Figure 4). As the interaction parameter is proportional to $1/T$, these stable compositions are a function of the temperature.

To understand the stability of a mixture, let us shorten the notation first. In all of the following considerations, we will denote $\phi=\phi_{\mathrm{A}}.$ We will start with two mixtures we have prepared, which have a composition $\phi_1$ and $\phi_2$. If we take a volume $V_1$ of the first mixture and a volume $V_2$ of the second one and combine them to a volume $V_0$, then the two mixtures form again a new composition with

$$
\phi_{0}V_{0} = \phi_{1}V_{1} + \phi_{2}V_{2}.
$$

We can divide by $V_0$ and introduce two new volume fractions $\alpha_1$, $\alpha_2$ to yield

$$
\phi_{0} = \frac{V_{1}}{V_{0}}\phi_{1} + \frac{V_{2}}{V_{0}}\phi_{2} = \alpha_{1}\phi_{1} + \alpha_{2}\phi_{2}.
$$

The total free energy of the system of the two separated mixtures at these volume fractions can then be written as

$$
F_{\mathrm{sep}} = \alpha_{1}F_{\mathrm{mix}}(\phi_{1}) + \alpha_{2}F_{\mathrm{mix}}(\phi_{2}).
$$

We can add this free energy as a function of the volume fraction $\phi_0$ to our free energy curve, for example, for an interaction parameter $\chi < 2$. The two initial concentrations lie on the coexistence curve, but the starting composition $\phi_0$ is not. Its initial free energy is $F_{\mathrm{sep}}(\phi_{0})$ and it is on a line connecting the points with the initial compositions, [Figure 2](PhaseTr_2.png). Since the actual free energy curve of the mixture is always lower than any point of the line denoting the separate free energies, the mixture is **stable**. This is true as long as the free energy curve is convex. 

<!--<img src="img/PhaseTr_2.png" alt="PT_2" name="PT_2" class="bg-primary mb-1" width="400px">-->

![mixing free energy example](./img/mix_example.png)

Let's change the free energy curve to a situation with a maximum at $\phi=0.5$. If we look at two situations, where one is in the region of the maximum and the second is next to the minimum (@fig-mixing-energy). Close to the maximum, the line with the free energy of the separate components always falls below the free energy curve of the mixture. The composition is therefore **unstable**. Close to the minimum, however, the composition is stable, yet, the mixture is not at the minimum of the free energy curve. Eventually, the system will evolve towards the free energy minimum and thus the mixture is called **metastable**.

::: {.content-visible when-format="html"}

```{python}
#| label: fig-mixing-energy
#| fig-cap: A line plot on a polar axis
#| tags: []

import numpy as np
import plotly.graph_objects as go

# Define volume fraction variable
phi = np.linspace(0.01, 0.99, 100)

# Define a function to calculate mixing free energy
def calculate_mixing_free_energy(phi, x):
    return phi * np.log(phi) + (1 - phi) * np.log(1 - phi) + x * phi * (1 - phi)

# Create a function to generate the figure based on the value of x
def create_plot_for_x(x):
    # Calculate the mixing free energy curve
    m = calculate_mixing_free_energy(phi, x)
    
    # Define phase-separated points based on the value of x
    if x <= 2:
        phi_1, phi_2 = 0.1, 0.8
    else:
        phi_1, phi_2 = 0.1, 0.45
        
    F_mix_1 = calculate_mixing_free_energy(phi_1, x)
    F_mix_2 = calculate_mixing_free_energy(phi_2, x)
    phi_0 = 0.5 * phi_1 + 0.5 * phi_2
    F_sep = 0.5 * F_mix_1 + 0.5 * F_mix_2

    # Create the figure
    fig = go.Figure()

    # Add the mixing free energy curve
    fig.add_trace(go.Scatter(
        x=phi, 
        y=m,
        mode='lines',
        name='Mixing Free Energy Curve'
    ))

    # Add a dashed line connecting the phase-separated points
    fig.add_trace(go.Scatter(
        x=[phi_1, phi_2],
        y=[F_mix_1, F_mix_2],
        mode='lines',
        line=dict(dash='dash', color='gray'),
        name='Dashed Line Connecting Points'
    ))

    # Add phase-separated points
    fig.add_trace(go.Scatter(
        x=[phi_1, phi_2, phi_0],
        y=[F_mix_1, F_mix_2, F_sep],
        mode='markers',
        marker=dict(size=10, color='black'),
        name='Phase-Separated Points'
    ))

    # Add annotations for phase-separated points
    fig.add_annotation(
        x=phi_1, y=F_mix_1,
        text=r'$F_{{mix}}(\phi_1)$',
        showarrow=True, arrowhead=2, ax=-30, ay=30
    )
    fig.add_annotation(
        x=phi_2, y=F_mix_2,
        text=r'$F_{{mix}}(\phi_2)$',
        showarrow=True, arrowhead=2, ax=30, ay=-30
    )
    fig.add_annotation(
        x=phi_0, y=F_sep,
        text=r'$F_{{sep}}(\phi_0)$',
        showarrow=True, arrowhead=2, ax=30, ay=-50
    )

    # Add vertical lines at phi_1, phi_2, and phi_0
    fig.add_vline(x=phi_1, line=dict(color='gray', dash='dot'))
    fig.add_vline(x=phi_2, line=dict(color='gray', dash='dot'))
    fig.add_vline(x=phi_0, line=dict(color='gray', dash='dot'))

    # Set axis labels and layout
    fig.update_layout(
        xaxis_title=r'$\text{Volume fraction } \phi$',
        yaxis_title=r'$F_{\rm mix}/(k_B T)$',
        yaxis_range=[-0.8, 0.6],
        width=800,
        height=600
    )

    return fig

# Create the initial plot for x = 0
x_init = 0
fig = create_plot_for_x(x_init)

# Add the slider for x
steps = []
for x in np.arange(0, 5.1, 0.5):
    fig_for_x = create_plot_for_x(x)
    step = dict(
        method="animate",
        args=[
            [fig_for_x],
            dict(
                mode="immediate",
                frame=dict(duration=300, redraw=True),
                transition=dict(duration=300)
            )
        ],
        label=f'{x:.1f}'
    )
    steps.append(step)

sliders = [dict(
    active=0,
    currentvalue={"prefix": "Interaction parameter (Volume fraction): "},
    pad={"t": 50},
    steps=steps
)]

# Update layout with sliders
fig.update_layout(sliders=sliders)

# Save the figure as an png file
pio.write_image(fig, 'img/detailed_mixing_free_energy.png')

# Show the interactive figure
fig.show()
```

:::

::: {.content-visible unless-format="html"}
#| label: fig-mixing-energy
![](img/detailed_mixing_free_energy.png)
:::

![image-2.png](img/download-1.png)

Apparently the above analysis has done nothing else than measuring the sign of the curvature of the free energy curve. We can summarize the conditions as

$$
\begin{aligned}
\frac{\mathrm{d}^2 F_{\mathrm{mix}}}{\mathrm{d}\phi^2} &> 0 \ldots \text{stable}\\
\frac{\mathrm{d}^2 F_{\mathrm{mix}}}{\mathrm{d}\phi^2} &< 0 \ldots \text{unstable}\\
\frac{\mathrm{d}^2 F_{\mathrm{mix}}}{\mathrm{d}\phi^2} &= 0 \ldots \text{spinodal line}\\
\frac{\mathrm{d}^3 F_{\mathrm{mix}}}{\mathrm{d}\phi^3} &= 0 \ldots \text{critical point}
\end{aligned}
$$

The spinodal line therefore separates the metastable from the unstable region. It corresponds to the inflection points of the free energy curve. The critical point, beyond which no phase separation can be achieved at any concentration $\phi$, is defined by setting the third derivative to zero.

![image-3.png](img/download-2.png)

_Phase diagram of an ideal mixture. The interaction parameter is plotted as a function of the composition. The individual regions as defined by the above equation are indicated._

We can now plot this free energy of mixing as a function of the volume fraction of component A.

